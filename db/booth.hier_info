|booth_board
SW[0] => Mcand[0].IN2
SW[1] => Mcand[1].IN2
SW[2] => Mcand[2].IN2
SW[3] => Mcand[3].IN2
SW[4] => Mcand[4].IN2
SW[5] => Mcand[5].IN2
SW[6] => Mcand[6].IN2
SW[7] => Mcand[7].IN2
SW[8] => Mplier[0].IN2
SW[9] => Mplier[1].IN2
SW[10] => Mplier[2].IN2
SW[11] => Mplier[3].IN2
SW[12] => Mplier[4].IN2
SW[13] => Mplier[5].IN2
SW[14] => Mplier[6].IN2
SW[15] => Mplier[7].IN2
SW[16] => ~NO_FANOUT~
SW[17] => Start.IN1
KEY[0] => Resetn.IN1
KEY[1] => Clock.IN1
HEX7[6] <= hex_7seg:mplier1.port1
HEX7[5] <= hex_7seg:mplier1.port1
HEX7[4] <= hex_7seg:mplier1.port1
HEX7[3] <= hex_7seg:mplier1.port1
HEX7[2] <= hex_7seg:mplier1.port1
HEX7[1] <= hex_7seg:mplier1.port1
HEX7[0] <= hex_7seg:mplier1.port1
HEX6[6] <= hex_7seg:mplier2.port1
HEX6[5] <= hex_7seg:mplier2.port1
HEX6[4] <= hex_7seg:mplier2.port1
HEX6[3] <= hex_7seg:mplier2.port1
HEX6[2] <= hex_7seg:mplier2.port1
HEX6[1] <= hex_7seg:mplier2.port1
HEX6[0] <= hex_7seg:mplier2.port1
HEX5[6] <= hex_7seg:mcand1.port1
HEX5[5] <= hex_7seg:mcand1.port1
HEX5[4] <= hex_7seg:mcand1.port1
HEX5[3] <= hex_7seg:mcand1.port1
HEX5[2] <= hex_7seg:mcand1.port1
HEX5[1] <= hex_7seg:mcand1.port1
HEX5[0] <= hex_7seg:mcand1.port1
HEX4[6] <= hex_7seg:mcand2.port1
HEX4[5] <= hex_7seg:mcand2.port1
HEX4[4] <= hex_7seg:mcand2.port1
HEX4[3] <= hex_7seg:mcand2.port1
HEX4[2] <= hex_7seg:mcand2.port1
HEX4[1] <= hex_7seg:mcand2.port1
HEX4[0] <= hex_7seg:mcand2.port1
HEX3[6] <= hex_7seg:product1.port1
HEX3[5] <= hex_7seg:product1.port1
HEX3[4] <= hex_7seg:product1.port1
HEX3[3] <= hex_7seg:product1.port1
HEX3[2] <= hex_7seg:product1.port1
HEX3[1] <= hex_7seg:product1.port1
HEX3[0] <= hex_7seg:product1.port1
HEX2[6] <= hex_7seg:product2.port1
HEX2[5] <= hex_7seg:product2.port1
HEX2[4] <= hex_7seg:product2.port1
HEX2[3] <= hex_7seg:product2.port1
HEX2[2] <= hex_7seg:product2.port1
HEX2[1] <= hex_7seg:product2.port1
HEX2[0] <= hex_7seg:product2.port1
HEX1[6] <= hex_7seg:product3.port1
HEX1[5] <= hex_7seg:product3.port1
HEX1[4] <= hex_7seg:product3.port1
HEX1[3] <= hex_7seg:product3.port1
HEX1[2] <= hex_7seg:product3.port1
HEX1[1] <= hex_7seg:product3.port1
HEX1[0] <= hex_7seg:product3.port1
HEX0[6] <= hex_7seg:product4.port1
HEX0[5] <= hex_7seg:product4.port1
HEX0[4] <= hex_7seg:product4.port1
HEX0[3] <= hex_7seg:product4.port1
HEX0[2] <= hex_7seg:product4.port1
HEX0[1] <= hex_7seg:product4.port1
HEX0[0] <= hex_7seg:product4.port1
LEDR[0] <= booth:booth.Done
LEDR[1] <= <GND>


|booth_board|booth:booth
Clock => Clock.IN3
Resetn => Resetn.IN3
Start => Start.IN1
Mplier[0] => Mplier[0].IN1
Mplier[1] => Mplier[1].IN1
Mplier[2] => Mplier[2].IN1
Mplier[3] => Mplier[3].IN1
Mplier[4] => Mplier[4].IN1
Mplier[5] => Mplier[5].IN1
Mplier[6] => Mplier[6].IN1
Mplier[7] => Mplier[7].IN1
Mcand[0] => Mcand[0].IN1
Mcand[1] => Mcand[1].IN1
Mcand[2] => Mcand[2].IN1
Mcand[3] => Mcand[3].IN1
Mcand[4] => Mcand[4].IN1
Mcand[5] => Mcand[5].IN1
Mcand[6] => Mcand[6].IN1
Mcand[7] => Mcand[7].IN1
Done <= Done.DB_MAX_OUTPUT_PORT_TYPE
Product[0] <= mem:mem.Product
Product[1] <= mem:mem.Product
Product[2] <= mem:mem.Product
Product[3] <= mem:mem.Product
Product[4] <= mem:mem.Product
Product[5] <= mem:mem.Product
Product[6] <= mem:mem.Product
Product[7] <= mem:mem.Product
Product[8] <= mem:mem.Product
Product[9] <= mem:mem.Product
Product[10] <= mem:mem.Product
Product[11] <= mem:mem.Product
Product[12] <= mem:mem.Product
Product[13] <= mem:mem.Product
Product[14] <= mem:mem.Product
Product[15] <= mem:mem.Product


|booth_board|booth:booth|state:state
B[0] => Decoder0.IN1
B[0] => Decoder1.IN1
B[1] => Decoder0.IN0
B[1] => Decoder1.IN0
Done => Next.DATAB
Done => Mux1.IN1
Done => Mux5.IN3
Done => Count.DATAB
Clock => Clock.IN2
Start => Mux1.IN2
Start => Mux3.IN3
Start => Mux4.IN3
Si[0] <= Mux4.DB_MAX_OUTPUT_PORT_TYPE
Si[1] <= Mux3.DB_MAX_OUTPUT_PORT_TYPE
Si[2] <= Mux2.DB_MAX_OUTPUT_PORT_TYPE
Count <= Mux5.DB_MAX_OUTPUT_PORT_TYPE
Resetn => Resetn.IN2


|booth_board|booth:booth|state:state|mydff:s0
d => q.DATAB
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => q~reg0.CLK
resetn => q.OUTPUTSELECT


|booth_board|booth:booth|state:state|mydff:s1
d => q.DATAB
q <= q~reg0.DB_MAX_OUTPUT_PORT_TYPE
clk => q~reg0.CLK
resetn => q.OUTPUTSELECT


|booth_board|booth:booth|mem:mem
A[0] => Mux16.IN6
A[1] => Mux15.IN6
A[2] => Mux14.IN6
A[3] => Mux13.IN6
A[4] => Mux12.IN6
A[5] => Mux11.IN6
A[6] => Mux10.IN6
A[7] => Mux9.IN6
B[0] => C_In.DATAB
B[1] => C_In.DATAB
B[2] => C_In.DATAB
B[3] => C_In.DATAB
B[4] => C_In.DATAB
B[5] => C_In.DATAB
B[6] => C_In.DATAB
B[7] => C_In.DATAB
B[7] => C_In.DATAB
Clock => Clock.IN1
Resetn => ~NO_FANOUT~
Si[0] => Mux0.IN9
Si[0] => Mux1.IN9
Si[0] => Mux2.IN9
Si[0] => Mux3.IN9
Si[0] => Mux4.IN9
Si[0] => Mux5.IN9
Si[0] => Mux6.IN9
Si[0] => Mux7.IN9
Si[0] => Mux8.IN9
Si[0] => Mux9.IN9
Si[0] => Mux10.IN9
Si[0] => Mux11.IN9
Si[0] => Mux12.IN9
Si[0] => Mux13.IN9
Si[0] => Mux14.IN9
Si[0] => Mux15.IN9
Si[0] => Mux16.IN9
Si[0] => Decoder0.IN2
Si[0] => Decoder1.IN2
Si[0] => Decoder2.IN2
Si[0] => Decoder3.IN2
Si[0] => Decoder4.IN2
Si[1] => Mux0.IN8
Si[1] => Mux1.IN8
Si[1] => Mux2.IN8
Si[1] => Mux3.IN8
Si[1] => Mux4.IN8
Si[1] => Mux5.IN8
Si[1] => Mux6.IN8
Si[1] => Mux7.IN8
Si[1] => Mux8.IN8
Si[1] => Mux9.IN8
Si[1] => Mux10.IN8
Si[1] => Mux11.IN8
Si[1] => Mux12.IN8
Si[1] => Mux13.IN8
Si[1] => Mux14.IN8
Si[1] => Mux15.IN8
Si[1] => Mux16.IN8
Si[1] => Decoder0.IN1
Si[1] => Decoder1.IN1
Si[1] => Decoder2.IN1
Si[1] => Decoder3.IN1
Si[1] => Decoder4.IN1
Si[2] => Mux0.IN7
Si[2] => Mux1.IN7
Si[2] => Mux2.IN7
Si[2] => Mux3.IN7
Si[2] => Mux4.IN7
Si[2] => Mux5.IN7
Si[2] => Mux6.IN7
Si[2] => Mux7.IN7
Si[2] => Mux8.IN7
Si[2] => Mux9.IN7
Si[2] => Mux10.IN7
Si[2] => Mux11.IN7
Si[2] => Mux12.IN7
Si[2] => Mux13.IN7
Si[2] => Mux14.IN7
Si[2] => Mux15.IN7
Si[2] => Mux16.IN7
Si[2] => Decoder0.IN0
Si[2] => Decoder1.IN0
Si[2] => Decoder2.IN0
Si[2] => Decoder3.IN0
Si[2] => Decoder4.IN0
Product[0] <= memblock:memblock.B_Out
Product[1] <= memblock:memblock.B_Out
Product[2] <= memblock:memblock.B_Out
Product[3] <= memblock:memblock.B_Out
Product[4] <= memblock:memblock.B_Out
Product[5] <= memblock:memblock.B_Out
Product[6] <= memblock:memblock.B_Out
Product[7] <= memblock:memblock.B_Out
Product[8] <= memblock:memblock.A_Out
Product[9] <= memblock:memblock.A_Out
Product[10] <= memblock:memblock.A_Out
Product[11] <= memblock:memblock.A_Out
Product[12] <= memblock:memblock.A_Out
Product[13] <= memblock:memblock.A_Out
Product[14] <= memblock:memblock.A_Out
Product[15] <= memblock:memblock.A_Out
Lsb[0] <= memblock:memblock.B_Out
Lsb[1] <= memblock:memblock.B_Out


|booth_board|booth:booth|mem:mem|memblock:memblock
A_In[0] => A_In[0].IN1
A_In[1] => A_In[1].IN1
A_In[2] => A_In[2].IN1
A_In[3] => A_In[3].IN1
A_In[4] => A_In[4].IN1
A_In[5] => A_In[5].IN1
A_In[6] => A_In[6].IN1
A_In[7] => A_In[7].IN1
A_In[8] => A_In[8].IN1
B_In[0] => B_In[0].IN1
B_In[1] => B_In[1].IN1
B_In[2] => B_In[2].IN1
B_In[3] => B_In[3].IN1
B_In[4] => B_In[4].IN1
B_In[5] => B_In[5].IN1
B_In[6] => B_In[6].IN1
B_In[7] => B_In[7].IN1
B_In[8] => B_In[8].IN1
C_In[0] => C_In[0].IN1
C_In[1] => C_In[1].IN1
C_In[2] => C_In[2].IN1
C_In[3] => C_In[3].IN1
C_In[4] => C_In[4].IN1
C_In[5] => C_In[5].IN1
C_In[6] => C_In[6].IN1
C_In[7] => C_In[7].IN1
C_In[8] => C_In[8].IN1
A_En => A_En.IN1
B_En => B_En.IN1
C_En => C_En.IN1
A_Out[0] <= memory:A.Data1_O
A_Out[1] <= memory:A.Data1_O
A_Out[2] <= memory:A.Data1_O
A_Out[3] <= memory:A.Data1_O
A_Out[4] <= memory:A.Data1_O
A_Out[5] <= memory:A.Data1_O
A_Out[6] <= memory:A.Data1_O
A_Out[7] <= memory:A.Data1_O
A_Out[8] <= memory:A.Data1_O
B_Out[0] <= memory:B.Data1_O
B_Out[1] <= memory:B.Data1_O
B_Out[2] <= memory:B.Data1_O
B_Out[3] <= memory:B.Data1_O
B_Out[4] <= memory:B.Data1_O
B_Out[5] <= memory:B.Data1_O
B_Out[6] <= memory:B.Data1_O
B_Out[7] <= memory:B.Data1_O
B_Out[8] <= memory:B.Data1_O
C_Out[0] <= memory:C.Data1_O
C_Out[1] <= memory:C.Data1_O
C_Out[2] <= memory:C.Data1_O
C_Out[3] <= memory:C.Data1_O
C_Out[4] <= memory:C.Data1_O
C_Out[5] <= memory:C.Data1_O
C_Out[6] <= memory:C.Data1_O
C_Out[7] <= memory:C.Data1_O
C_Out[8] <= memory:C.Data1_O
Clock => Clock.IN3


|booth_board|booth:booth|mem:mem|memblock:memblock|memory:A
Addr[0] => Ram1.waddr_a[0].DATAIN
Addr[0] => Ram2.waddr_a[0].DATAIN
Addr[0] => Ram1.WADDR
Addr[0] => Ram1.RADDR
Addr[0] => Ram2.WADDR
Addr[0] => Ram2.RADDR
Addr[1] => Ram1.waddr_a[1].DATAIN
Addr[1] => Ram2.waddr_a[1].DATAIN
Addr[1] => Ram1.WADDR1
Addr[1] => Ram1.RADDR1
Addr[1] => Ram2.WADDR1
Addr[1] => Ram2.RADDR1
Addr[2] => Ram1.waddr_a[2].DATAIN
Addr[2] => Ram2.waddr_a[2].DATAIN
Addr[2] => Ram1.WADDR2
Addr[2] => Ram1.RADDR2
Addr[2] => Ram2.WADDR2
Addr[2] => Ram2.RADDR2
Addr[3] => Ram1.waddr_a[3].DATAIN
Addr[3] => Ram2.waddr_a[3].DATAIN
Addr[3] => Ram1.WADDR3
Addr[3] => Ram1.RADDR3
Addr[3] => Ram2.WADDR3
Addr[3] => Ram2.RADDR3
Data_In[0] => Ram1.data_a[0].DATAIN
Data_In[0] => Ram2.data_a[0].DATAIN
Data_In[0] => Ram1.DATAIN
Data_In[0] => Ram2.DATAIN
Data_In[1] => Ram1.data_a[1].DATAIN
Data_In[1] => Ram2.data_a[1].DATAIN
Data_In[1] => Ram1.DATAIN1
Data_In[1] => Ram2.DATAIN1
Data_In[2] => Ram1.data_a[2].DATAIN
Data_In[2] => Ram2.data_a[2].DATAIN
Data_In[2] => Ram1.DATAIN2
Data_In[2] => Ram2.DATAIN2
Data_In[3] => Ram1.data_a[3].DATAIN
Data_In[3] => Ram2.data_a[3].DATAIN
Data_In[3] => Ram1.DATAIN3
Data_In[3] => Ram2.DATAIN3
Data_In[4] => Ram1.data_a[4].DATAIN
Data_In[4] => Ram2.data_a[4].DATAIN
Data_In[4] => Ram1.DATAIN4
Data_In[4] => Ram2.DATAIN4
Data_In[5] => Ram1.data_a[5].DATAIN
Data_In[5] => Ram2.data_a[5].DATAIN
Data_In[5] => Ram1.DATAIN5
Data_In[5] => Ram2.DATAIN5
Data_In[6] => Ram1.data_a[6].DATAIN
Data_In[6] => Ram2.data_a[6].DATAIN
Data_In[6] => Ram1.DATAIN6
Data_In[6] => Ram2.DATAIN6
Data_In[7] => Ram1.data_a[7].DATAIN
Data_In[7] => Ram2.data_a[7].DATAIN
Data_In[7] => Ram1.DATAIN7
Data_In[7] => Ram2.DATAIN7
Data_In[8] => Ram1.data_a[8].DATAIN
Data_In[8] => Ram2.data_a[8].DATAIN
Data_In[8] => Ram1.DATAIN8
Data_In[8] => Ram2.DATAIN8
W_En => Equal0.IN2
W_En => Equal1.IN2
Clk => Ram1.we_a.CLK
Clk => Ram1.waddr_a[3].CLK
Clk => Ram1.waddr_a[2].CLK
Clk => Ram1.waddr_a[1].CLK
Clk => Ram1.waddr_a[0].CLK
Clk => Ram1.data_a[8].CLK
Clk => Ram1.data_a[7].CLK
Clk => Ram1.data_a[6].CLK
Clk => Ram1.data_a[5].CLK
Clk => Ram1.data_a[4].CLK
Clk => Ram1.data_a[3].CLK
Clk => Ram1.data_a[2].CLK
Clk => Ram1.data_a[1].CLK
Clk => Ram1.data_a[0].CLK
Clk => Ram2.we_a.CLK
Clk => Ram2.waddr_a[3].CLK
Clk => Ram2.waddr_a[2].CLK
Clk => Ram2.waddr_a[1].CLK
Clk => Ram2.waddr_a[0].CLK
Clk => Ram2.data_a[8].CLK
Clk => Ram2.data_a[7].CLK
Clk => Ram2.data_a[6].CLK
Clk => Ram2.data_a[5].CLK
Clk => Ram2.data_a[4].CLK
Clk => Ram2.data_a[3].CLK
Clk => Ram2.data_a[2].CLK
Clk => Ram2.data_a[1].CLK
Clk => Ram2.data_a[0].CLK
Clk => Ram1.CLK0
Clk => Ram2.CLK0
M_Sel => Equal0.IN3
M_Sel => Equal1.IN3
Data1_O[0] <= Ram1.DATAOUT
Data1_O[1] <= Ram1.DATAOUT1
Data1_O[2] <= Ram1.DATAOUT2
Data1_O[3] <= Ram1.DATAOUT3
Data1_O[4] <= Ram1.DATAOUT4
Data1_O[5] <= Ram1.DATAOUT5
Data1_O[6] <= Ram1.DATAOUT6
Data1_O[7] <= Ram1.DATAOUT7
Data1_O[8] <= Ram1.DATAOUT8
Data2_O[0] <= Ram2.DATAOUT
Data2_O[1] <= Ram2.DATAOUT1
Data2_O[2] <= Ram2.DATAOUT2
Data2_O[3] <= Ram2.DATAOUT3
Data2_O[4] <= Ram2.DATAOUT4
Data2_O[5] <= Ram2.DATAOUT5
Data2_O[6] <= Ram2.DATAOUT6
Data2_O[7] <= Ram2.DATAOUT7
Data2_O[8] <= Ram2.DATAOUT8


|booth_board|booth:booth|mem:mem|memblock:memblock|memory:B
Addr[0] => Ram1.waddr_a[0].DATAIN
Addr[0] => Ram2.waddr_a[0].DATAIN
Addr[0] => Ram1.WADDR
Addr[0] => Ram1.RADDR
Addr[0] => Ram2.WADDR
Addr[0] => Ram2.RADDR
Addr[1] => Ram1.waddr_a[1].DATAIN
Addr[1] => Ram2.waddr_a[1].DATAIN
Addr[1] => Ram1.WADDR1
Addr[1] => Ram1.RADDR1
Addr[1] => Ram2.WADDR1
Addr[1] => Ram2.RADDR1
Addr[2] => Ram1.waddr_a[2].DATAIN
Addr[2] => Ram2.waddr_a[2].DATAIN
Addr[2] => Ram1.WADDR2
Addr[2] => Ram1.RADDR2
Addr[2] => Ram2.WADDR2
Addr[2] => Ram2.RADDR2
Addr[3] => Ram1.waddr_a[3].DATAIN
Addr[3] => Ram2.waddr_a[3].DATAIN
Addr[3] => Ram1.WADDR3
Addr[3] => Ram1.RADDR3
Addr[3] => Ram2.WADDR3
Addr[3] => Ram2.RADDR3
Data_In[0] => Ram1.data_a[0].DATAIN
Data_In[0] => Ram2.data_a[0].DATAIN
Data_In[0] => Ram1.DATAIN
Data_In[0] => Ram2.DATAIN
Data_In[1] => Ram1.data_a[1].DATAIN
Data_In[1] => Ram2.data_a[1].DATAIN
Data_In[1] => Ram1.DATAIN1
Data_In[1] => Ram2.DATAIN1
Data_In[2] => Ram1.data_a[2].DATAIN
Data_In[2] => Ram2.data_a[2].DATAIN
Data_In[2] => Ram1.DATAIN2
Data_In[2] => Ram2.DATAIN2
Data_In[3] => Ram1.data_a[3].DATAIN
Data_In[3] => Ram2.data_a[3].DATAIN
Data_In[3] => Ram1.DATAIN3
Data_In[3] => Ram2.DATAIN3
Data_In[4] => Ram1.data_a[4].DATAIN
Data_In[4] => Ram2.data_a[4].DATAIN
Data_In[4] => Ram1.DATAIN4
Data_In[4] => Ram2.DATAIN4
Data_In[5] => Ram1.data_a[5].DATAIN
Data_In[5] => Ram2.data_a[5].DATAIN
Data_In[5] => Ram1.DATAIN5
Data_In[5] => Ram2.DATAIN5
Data_In[6] => Ram1.data_a[6].DATAIN
Data_In[6] => Ram2.data_a[6].DATAIN
Data_In[6] => Ram1.DATAIN6
Data_In[6] => Ram2.DATAIN6
Data_In[7] => Ram1.data_a[7].DATAIN
Data_In[7] => Ram2.data_a[7].DATAIN
Data_In[7] => Ram1.DATAIN7
Data_In[7] => Ram2.DATAIN7
Data_In[8] => Ram1.data_a[8].DATAIN
Data_In[8] => Ram2.data_a[8].DATAIN
Data_In[8] => Ram1.DATAIN8
Data_In[8] => Ram2.DATAIN8
W_En => Equal0.IN2
W_En => Equal1.IN2
Clk => Ram1.we_a.CLK
Clk => Ram1.waddr_a[3].CLK
Clk => Ram1.waddr_a[2].CLK
Clk => Ram1.waddr_a[1].CLK
Clk => Ram1.waddr_a[0].CLK
Clk => Ram1.data_a[8].CLK
Clk => Ram1.data_a[7].CLK
Clk => Ram1.data_a[6].CLK
Clk => Ram1.data_a[5].CLK
Clk => Ram1.data_a[4].CLK
Clk => Ram1.data_a[3].CLK
Clk => Ram1.data_a[2].CLK
Clk => Ram1.data_a[1].CLK
Clk => Ram1.data_a[0].CLK
Clk => Ram2.we_a.CLK
Clk => Ram2.waddr_a[3].CLK
Clk => Ram2.waddr_a[2].CLK
Clk => Ram2.waddr_a[1].CLK
Clk => Ram2.waddr_a[0].CLK
Clk => Ram2.data_a[8].CLK
Clk => Ram2.data_a[7].CLK
Clk => Ram2.data_a[6].CLK
Clk => Ram2.data_a[5].CLK
Clk => Ram2.data_a[4].CLK
Clk => Ram2.data_a[3].CLK
Clk => Ram2.data_a[2].CLK
Clk => Ram2.data_a[1].CLK
Clk => Ram2.data_a[0].CLK
Clk => Ram1.CLK0
Clk => Ram2.CLK0
M_Sel => Equal0.IN3
M_Sel => Equal1.IN3
Data1_O[0] <= Ram1.DATAOUT
Data1_O[1] <= Ram1.DATAOUT1
Data1_O[2] <= Ram1.DATAOUT2
Data1_O[3] <= Ram1.DATAOUT3
Data1_O[4] <= Ram1.DATAOUT4
Data1_O[5] <= Ram1.DATAOUT5
Data1_O[6] <= Ram1.DATAOUT6
Data1_O[7] <= Ram1.DATAOUT7
Data1_O[8] <= Ram1.DATAOUT8
Data2_O[0] <= Ram2.DATAOUT
Data2_O[1] <= Ram2.DATAOUT1
Data2_O[2] <= Ram2.DATAOUT2
Data2_O[3] <= Ram2.DATAOUT3
Data2_O[4] <= Ram2.DATAOUT4
Data2_O[5] <= Ram2.DATAOUT5
Data2_O[6] <= Ram2.DATAOUT6
Data2_O[7] <= Ram2.DATAOUT7
Data2_O[8] <= Ram2.DATAOUT8


|booth_board|booth:booth|mem:mem|memblock:memblock|memory:C
Addr[0] => Ram1.waddr_a[0].DATAIN
Addr[0] => Ram2.waddr_a[0].DATAIN
Addr[0] => Ram1.WADDR
Addr[0] => Ram1.RADDR
Addr[0] => Ram2.WADDR
Addr[0] => Ram2.RADDR
Addr[1] => Ram1.waddr_a[1].DATAIN
Addr[1] => Ram2.waddr_a[1].DATAIN
Addr[1] => Ram1.WADDR1
Addr[1] => Ram1.RADDR1
Addr[1] => Ram2.WADDR1
Addr[1] => Ram2.RADDR1
Addr[2] => Ram1.waddr_a[2].DATAIN
Addr[2] => Ram2.waddr_a[2].DATAIN
Addr[2] => Ram1.WADDR2
Addr[2] => Ram1.RADDR2
Addr[2] => Ram2.WADDR2
Addr[2] => Ram2.RADDR2
Addr[3] => Ram1.waddr_a[3].DATAIN
Addr[3] => Ram2.waddr_a[3].DATAIN
Addr[3] => Ram1.WADDR3
Addr[3] => Ram1.RADDR3
Addr[3] => Ram2.WADDR3
Addr[3] => Ram2.RADDR3
Data_In[0] => Ram1.data_a[0].DATAIN
Data_In[0] => Ram2.data_a[0].DATAIN
Data_In[0] => Ram1.DATAIN
Data_In[0] => Ram2.DATAIN
Data_In[1] => Ram1.data_a[1].DATAIN
Data_In[1] => Ram2.data_a[1].DATAIN
Data_In[1] => Ram1.DATAIN1
Data_In[1] => Ram2.DATAIN1
Data_In[2] => Ram1.data_a[2].DATAIN
Data_In[2] => Ram2.data_a[2].DATAIN
Data_In[2] => Ram1.DATAIN2
Data_In[2] => Ram2.DATAIN2
Data_In[3] => Ram1.data_a[3].DATAIN
Data_In[3] => Ram2.data_a[3].DATAIN
Data_In[3] => Ram1.DATAIN3
Data_In[3] => Ram2.DATAIN3
Data_In[4] => Ram1.data_a[4].DATAIN
Data_In[4] => Ram2.data_a[4].DATAIN
Data_In[4] => Ram1.DATAIN4
Data_In[4] => Ram2.DATAIN4
Data_In[5] => Ram1.data_a[5].DATAIN
Data_In[5] => Ram2.data_a[5].DATAIN
Data_In[5] => Ram1.DATAIN5
Data_In[5] => Ram2.DATAIN5
Data_In[6] => Ram1.data_a[6].DATAIN
Data_In[6] => Ram2.data_a[6].DATAIN
Data_In[6] => Ram1.DATAIN6
Data_In[6] => Ram2.DATAIN6
Data_In[7] => Ram1.data_a[7].DATAIN
Data_In[7] => Ram2.data_a[7].DATAIN
Data_In[7] => Ram1.DATAIN7
Data_In[7] => Ram2.DATAIN7
Data_In[8] => Ram1.data_a[8].DATAIN
Data_In[8] => Ram2.data_a[8].DATAIN
Data_In[8] => Ram1.DATAIN8
Data_In[8] => Ram2.DATAIN8
W_En => Equal0.IN2
W_En => Equal1.IN2
Clk => Ram1.we_a.CLK
Clk => Ram1.waddr_a[3].CLK
Clk => Ram1.waddr_a[2].CLK
Clk => Ram1.waddr_a[1].CLK
Clk => Ram1.waddr_a[0].CLK
Clk => Ram1.data_a[8].CLK
Clk => Ram1.data_a[7].CLK
Clk => Ram1.data_a[6].CLK
Clk => Ram1.data_a[5].CLK
Clk => Ram1.data_a[4].CLK
Clk => Ram1.data_a[3].CLK
Clk => Ram1.data_a[2].CLK
Clk => Ram1.data_a[1].CLK
Clk => Ram1.data_a[0].CLK
Clk => Ram2.we_a.CLK
Clk => Ram2.waddr_a[3].CLK
Clk => Ram2.waddr_a[2].CLK
Clk => Ram2.waddr_a[1].CLK
Clk => Ram2.waddr_a[0].CLK
Clk => Ram2.data_a[8].CLK
Clk => Ram2.data_a[7].CLK
Clk => Ram2.data_a[6].CLK
Clk => Ram2.data_a[5].CLK
Clk => Ram2.data_a[4].CLK
Clk => Ram2.data_a[3].CLK
Clk => Ram2.data_a[2].CLK
Clk => Ram2.data_a[1].CLK
Clk => Ram2.data_a[0].CLK
Clk => Ram1.CLK0
Clk => Ram2.CLK0
M_Sel => Equal0.IN3
M_Sel => Equal1.IN3
Data1_O[0] <= Ram1.DATAOUT
Data1_O[1] <= Ram1.DATAOUT1
Data1_O[2] <= Ram1.DATAOUT2
Data1_O[3] <= Ram1.DATAOUT3
Data1_O[4] <= Ram1.DATAOUT4
Data1_O[5] <= Ram1.DATAOUT5
Data1_O[6] <= Ram1.DATAOUT6
Data1_O[7] <= Ram1.DATAOUT7
Data1_O[8] <= Ram1.DATAOUT8
Data2_O[0] <= Ram2.DATAOUT
Data2_O[1] <= Ram2.DATAOUT1
Data2_O[2] <= Ram2.DATAOUT2
Data2_O[3] <= Ram2.DATAOUT3
Data2_O[4] <= Ram2.DATAOUT4
Data2_O[5] <= Ram2.DATAOUT5
Data2_O[6] <= Ram2.DATAOUT6
Data2_O[7] <= Ram2.DATAOUT7
Data2_O[8] <= Ram2.DATAOUT8


|booth_board|booth:booth|counter:counter
en => done.OUTPUTSELECT
en => count.OUTPUTSELECT
en => count.OUTPUTSELECT
en => count.OUTPUTSELECT
en => count.OUTPUTSELECT
clk => count[0]~reg0.CLK
clk => count[1]~reg0.CLK
clk => count[2]~reg0.CLK
clk => count[3]~reg0.CLK
clk => done~reg0.CLK
resetn => done.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
resetn => count.OUTPUTSELECT
count[0] <= count[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[1] <= count[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[2] <= count[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
count[3] <= count[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
done <= done~reg0.DB_MAX_OUTPUT_PORT_TYPE


|booth_board|hex_7seg:mplier1
w[0] => a1.IN1
w[0] => a3.IN1
w[0] => a5.IN1
w[0] => a7.IN1
w[0] => a9.IN1
w[0] => B.IN1
w[0] => D.IN1
w[0] => F.IN1
w[0] => a0.IN1
w[0] => E.IN1
w[0] => C.IN1
w[0] => A.IN1
w[0] => a8.IN1
w[0] => a6.IN1
w[0] => a2.IN1
w[0] => a4.IN1
w[1] => a3.IN1
w[1] => a7.IN1
w[1] => A.IN1
w[1] => F.IN1
w[1] => a0.IN1
w[1] => C.IN1
w[1] => a9.IN1
w[1] => a5.IN1
w[2] => a7.IN0
w[2] => F.IN0
w[2] => a0.IN0
w[2] => A.IN0
w[3] => A.IN1
w[3] => F.IN1
w[3] => a0.IN1
w[3] => a7.IN1
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|booth_board|hex_7seg:mplier2
w[0] => a1.IN1
w[0] => a3.IN1
w[0] => a5.IN1
w[0] => a7.IN1
w[0] => a9.IN1
w[0] => B.IN1
w[0] => D.IN1
w[0] => F.IN1
w[0] => a0.IN1
w[0] => E.IN1
w[0] => C.IN1
w[0] => A.IN1
w[0] => a8.IN1
w[0] => a6.IN1
w[0] => a2.IN1
w[0] => a4.IN1
w[1] => a3.IN1
w[1] => a7.IN1
w[1] => A.IN1
w[1] => F.IN1
w[1] => a0.IN1
w[1] => C.IN1
w[1] => a9.IN1
w[1] => a5.IN1
w[2] => a7.IN0
w[2] => F.IN0
w[2] => a0.IN0
w[2] => A.IN0
w[3] => A.IN1
w[3] => F.IN1
w[3] => a0.IN1
w[3] => a7.IN1
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|booth_board|hex_7seg:mcand1
w[0] => a1.IN1
w[0] => a3.IN1
w[0] => a5.IN1
w[0] => a7.IN1
w[0] => a9.IN1
w[0] => B.IN1
w[0] => D.IN1
w[0] => F.IN1
w[0] => a0.IN1
w[0] => E.IN1
w[0] => C.IN1
w[0] => A.IN1
w[0] => a8.IN1
w[0] => a6.IN1
w[0] => a2.IN1
w[0] => a4.IN1
w[1] => a3.IN1
w[1] => a7.IN1
w[1] => A.IN1
w[1] => F.IN1
w[1] => a0.IN1
w[1] => C.IN1
w[1] => a9.IN1
w[1] => a5.IN1
w[2] => a7.IN0
w[2] => F.IN0
w[2] => a0.IN0
w[2] => A.IN0
w[3] => A.IN1
w[3] => F.IN1
w[3] => a0.IN1
w[3] => a7.IN1
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|booth_board|hex_7seg:mcand2
w[0] => a1.IN1
w[0] => a3.IN1
w[0] => a5.IN1
w[0] => a7.IN1
w[0] => a9.IN1
w[0] => B.IN1
w[0] => D.IN1
w[0] => F.IN1
w[0] => a0.IN1
w[0] => E.IN1
w[0] => C.IN1
w[0] => A.IN1
w[0] => a8.IN1
w[0] => a6.IN1
w[0] => a2.IN1
w[0] => a4.IN1
w[1] => a3.IN1
w[1] => a7.IN1
w[1] => A.IN1
w[1] => F.IN1
w[1] => a0.IN1
w[1] => C.IN1
w[1] => a9.IN1
w[1] => a5.IN1
w[2] => a7.IN0
w[2] => F.IN0
w[2] => a0.IN0
w[2] => A.IN0
w[3] => A.IN1
w[3] => F.IN1
w[3] => a0.IN1
w[3] => a7.IN1
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|booth_board|hex_7seg:product1
w[0] => a1.IN1
w[0] => a3.IN1
w[0] => a5.IN1
w[0] => a7.IN1
w[0] => a9.IN1
w[0] => B.IN1
w[0] => D.IN1
w[0] => F.IN1
w[0] => a0.IN1
w[0] => E.IN1
w[0] => C.IN1
w[0] => A.IN1
w[0] => a8.IN1
w[0] => a6.IN1
w[0] => a2.IN1
w[0] => a4.IN1
w[1] => a3.IN1
w[1] => a7.IN1
w[1] => A.IN1
w[1] => F.IN1
w[1] => a0.IN1
w[1] => C.IN1
w[1] => a9.IN1
w[1] => a5.IN1
w[2] => a7.IN0
w[2] => F.IN0
w[2] => a0.IN0
w[2] => A.IN0
w[3] => A.IN1
w[3] => F.IN1
w[3] => a0.IN1
w[3] => a7.IN1
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|booth_board|hex_7seg:product2
w[0] => a1.IN1
w[0] => a3.IN1
w[0] => a5.IN1
w[0] => a7.IN1
w[0] => a9.IN1
w[0] => B.IN1
w[0] => D.IN1
w[0] => F.IN1
w[0] => a0.IN1
w[0] => E.IN1
w[0] => C.IN1
w[0] => A.IN1
w[0] => a8.IN1
w[0] => a6.IN1
w[0] => a2.IN1
w[0] => a4.IN1
w[1] => a3.IN1
w[1] => a7.IN1
w[1] => A.IN1
w[1] => F.IN1
w[1] => a0.IN1
w[1] => C.IN1
w[1] => a9.IN1
w[1] => a5.IN1
w[2] => a7.IN0
w[2] => F.IN0
w[2] => a0.IN0
w[2] => A.IN0
w[3] => A.IN1
w[3] => F.IN1
w[3] => a0.IN1
w[3] => a7.IN1
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|booth_board|hex_7seg:product3
w[0] => a1.IN1
w[0] => a3.IN1
w[0] => a5.IN1
w[0] => a7.IN1
w[0] => a9.IN1
w[0] => B.IN1
w[0] => D.IN1
w[0] => F.IN1
w[0] => a0.IN1
w[0] => E.IN1
w[0] => C.IN1
w[0] => A.IN1
w[0] => a8.IN1
w[0] => a6.IN1
w[0] => a2.IN1
w[0] => a4.IN1
w[1] => a3.IN1
w[1] => a7.IN1
w[1] => A.IN1
w[1] => F.IN1
w[1] => a0.IN1
w[1] => C.IN1
w[1] => a9.IN1
w[1] => a5.IN1
w[2] => a7.IN0
w[2] => F.IN0
w[2] => a0.IN0
w[2] => A.IN0
w[3] => A.IN1
w[3] => F.IN1
w[3] => a0.IN1
w[3] => a7.IN1
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE


|booth_board|hex_7seg:product4
w[0] => a1.IN1
w[0] => a3.IN1
w[0] => a5.IN1
w[0] => a7.IN1
w[0] => a9.IN1
w[0] => B.IN1
w[0] => D.IN1
w[0] => F.IN1
w[0] => a0.IN1
w[0] => E.IN1
w[0] => C.IN1
w[0] => A.IN1
w[0] => a8.IN1
w[0] => a6.IN1
w[0] => a2.IN1
w[0] => a4.IN1
w[1] => a3.IN1
w[1] => a7.IN1
w[1] => A.IN1
w[1] => F.IN1
w[1] => a0.IN1
w[1] => C.IN1
w[1] => a9.IN1
w[1] => a5.IN1
w[2] => a7.IN0
w[2] => F.IN0
w[2] => a0.IN0
w[2] => A.IN0
w[3] => A.IN1
w[3] => F.IN1
w[3] => a0.IN1
w[3] => a7.IN1
seg[6] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[5] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[4] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[3] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[2] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[1] <= seg.DB_MAX_OUTPUT_PORT_TYPE
seg[0] <= seg.DB_MAX_OUTPUT_PORT_TYPE


